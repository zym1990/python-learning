#以下总结以python3为基础

1.制表符与换行符均需要双引号解析

制表符 \t
>>>print("\tpython")
   python

换行符\n
>>>print("Languages:\nPython\nC\nJavaScript")
Languages:
Python
C
JavaScript

2.删除空白，类似与php的trim()

strip(),lstrip(),rstrip()去除左右两边空格
>>>a = ' python '
>>>a.strip()

3.查看python设计原则

>>>import this

4.字符串部分方法使用

#title()修改单词首字母为大写
name="ada lovelace"
print(name.title())
结果：Ada Lovelace

#upper() lower()将单词全部转化为大写或小写

5.列表

列表用[]表示，类似于php中的数组

bicycles=['a','b','c']
列表访问：print(bicycles[0])，访问最后一个元素print(bicycles[-1])
列表末尾追加元素：bicycles.append('e')
列表中插入元素：bicycles.insert(4,'new') #为新元素指定索引和值

#del pop()均需要索引删除元素，若不知道索引，只知道值，
#可使用delValue=bicycles.remove('c'),remove()方法只删除第一个匹配的值
删除指定元素：del bicycles[0]
删除并获取到删除的元素：delValue = bicycles.pop(),delValue为删除掉的值，pop()不传值表示删除末尾元素，也可传入要删除的值的索引

组织列表：
sort()对列表进行排序
cars = ['bmw', 'audi', 'toyota', 'subaru']
cars.sort()
print(cars)
// 按字母顺序排序，sort()永久性修改列表排列顺序
cars.sort(reverse=True) // 与sort()排列顺序相反，对列表排列顺序的修改是永久性的

sorted()临时修改排列顺序，并不会影响原列表排列顺序
sorted(reverse=True)

reverse() 翻转列表元素，永久性修改元素的排列顺序

len()获取列表长度

#循环列表
for value in values:
    print(value)


#数字列表
for value in range(1,5):
    print(value)

结果：1 2 3 4
range()生成一系列数字，从指定的第一个值开始到第二个值之前结束

list()可将range()的结果转化为列表
message = list(range(1,5))
print(message)
结果：[1,2,3,4]

range(2,11,2) 结果：2 4 6 8 10

#对数字列表进行简单的统计计算
min() max() sum()


#列表解析
squares = [value**2 for value in range(1,11)]

#列表切片
players = ['charles','martina','michael','florence','eli']
print(players[0:3]) 输出从索引0到索引2的列表,若没有指定起始索引，将默认从头开始截取，不指定结束索引，将截取至最后


#元祖
不可变的列表被称为元祖，元祖使用小括号()
元祖数据不可改变，但可给元祖变量重新赋值

#in检查特定值是否包含在列表中,not in检查特定值是否不包含在列表中：
request_toppings = ['mushrooms', 'onions', 'pineapple']
'mushurooms' in request_toppings

#字典，字典获取元素的顺序是不固定的
字典是一系列的键值对
alien_o = {'color':'green', 'points':5}
print(alien_o['color'])
添加键值对：
alien_o['x_position'] = 0
删除：del alien_o['x_position']

字典循环：
user_o = {
    'username':'efermi',
    'first':'enrico',
    'last':'fermi'
}

for value in user_o:
    print(value)

for value in user_o获取到字典的键值；
for value in user_o.items()获取结果为元祖('username','efermi')('first','enrico')('last','fermi')
for key, value in user_o.items()分别获取对应的key和value
for value in user_o.keys()遍历字典中的所有键值

user_o.keys()返回字典中的所有键，可拿来直接使用

for value in sorted(user_o.keys())使用sorted()来获得按特定排序的键列表的副本